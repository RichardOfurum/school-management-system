"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3668],{38113:function(e,s,t){var r=t(57437);s.Z=e=>{let{label:s,type:t="text",register:a,name:i,defaultValue:n,error:o,hidden:m,inputProps:d}=e;return(0,r.jsxs)("div",{className:m?"hidden":"flex flex-col gap-1 w-full",children:[(0,r.jsx)("label",{className:"text-sm font-medium text-gray-700",children:s}),(0,r.jsx)("input",{type:t,...a(i),className:"w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500",...d,defaultValue:n}),(null==o?void 0:o.message)&&(0,r.jsx)("p",{className:"text-xs text-red-500 mt-1",children:o.message.toString()})]})}},23668:function(e,s,t){t.r(s);var r=t(57437),a=t(31014),i=t(39343),n=t(38113),o=t(80118),m=t(31721),d=t(54887),l=t(2265),c=t(24648),u=t(16463);s.default=e=>{var s,t;let{type:g,data:z,setOpen:p,relatedData:b}=e,{register:f,handleSubmit:x,formState:{errors:h}}=(0,i.cI)({resolver:(0,a.F)(o.UQ)}),[q,j]=(0,l.useState)(!1),[v,w]=(0,d.useFormState)("create"===g?m.qH:m.a7,{success:!1,error:!1}),I=x(e=>{j(!0),console.log(e),w(e)}),y=(0,u.useRouter)();(0,l.useEffect)(()=>{v.success&&((0,c.Am)("Class has been ".concat("create"===g?"created":"updated","!")),p(!1),y.refresh(),j(!1)),v.error&&(j(!1),c.Am.error(v.error))},[v,y,g,p]);let{teachers:T=[],grades:N=[]}=b||{};return console.log("teachers",T),console.log("grades",N),console.log("relatedData",b),(0,r.jsxs)("form",{className:"flex flex-col gap-8 scrollbar-thin",onSubmit:I,children:[(0,r.jsx)("h1",{className:"text-xl font-semibold",children:"create"===g?"Create a new class":"Update the class"}),(0,r.jsxs)("div",{className:"flex justify-between flex-wrap gap-4",children:[(0,r.jsx)(n.Z,{label:"Class name",name:"name",defaultValue:null==z?void 0:z.name,register:f,error:null==h?void 0:h.name}),(0,r.jsx)(n.Z,{label:"Capacity",name:"capacity",defaultValue:null==z?void 0:z.capacity,register:f,error:null==h?void 0:h.capacity}),z&&(0,r.jsx)(n.Z,{label:"Id",name:"id",defaultValue:null==z?void 0:z.id,register:f,error:null==h?void 0:h.id,hidden:!0}),(0,r.jsxs)("div",{className:"flex flex-col gap-2 w-full md:w-1/4",children:[(0,r.jsx)("label",{className:"text-xs text-gray-500",children:"Supervisor"}),(0,r.jsx)("select",{className:"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full",...f("supervisorId"),defaultValue:null==z?void 0:z.teachers,children:T.map(e=>(0,r.jsx)("option",{value:e.id,selected:z&&e.id===z.supervisorId,children:e.name+" "+e.surname},e.id))}),(null===(s=h.supervisorId)||void 0===s?void 0:s.message)&&(0,r.jsx)("p",{className:"text-xs text-red-400",children:h.supervisorId.message.toString()})]}),(0,r.jsxs)("div",{className:"flex flex-col gap-2 w-full md:w-1/4",children:[(0,r.jsx)("label",{className:"text-xs text-gray-500",children:"Grade"}),(0,r.jsx)("select",{className:"ring-[1.5px] ring-gray-300 p-2 rounded-md text-sm w-full",...f("gradeId"),defaultValue:null==z?void 0:z.gradeId,children:N.map(e=>(0,r.jsx)("option",{value:e.id,selected:z&&e.id===z.gradeId,children:e.level},e.id))}),(null===(t=h.gradeId)||void 0===t?void 0:t.message)&&(0,r.jsx)("p",{className:"text-xs text-red-400",children:h.gradeId.message.toString()})]})]}),v.error&&(0,r.jsx)("span",{className:"text-red-500",children:"Something went wrong!"}),(0,r.jsx)("button",{className:"bg-blue-400 text-white p-2 rounded-md",children:q?"loading...":"create"===g?"Create":"Update"})]})}},80118:function(e,s,t){t.d(s,{O7:function(){return b},ON:function(){return c},Q1:function(){return o},Qu:function(){return m},Rj:function(){return f},UQ:function(){return i},Xj:function(){return d},a2:function(){return u},aD:function(){return x},iQ:function(){return n},k:function(){return p},o6:function(){return z},qJ:function(){return a},rA:function(){return l},zi:function(){return g}});var r=t(59772);let a=r.z.object({id:r.z.coerce.number().optional(),name:r.z.string().min(1,{message:"Subject name is required!"}),teachers:r.z.array(r.z.string())}),i=r.z.object({id:r.z.coerce.number().optional(),name:r.z.string().min(1,{message:"Subject name is required!"}),capacity:r.z.coerce.number().min(1,{message:"Capacity name is required!"}),gradeId:r.z.coerce.number().min(1,{message:"Grade name is required!"}),supervisorId:r.z.coerce.string().optional()}),n=r.z.object({id:r.z.string().optional(),username:r.z.string().min(10,{message:"Username must be at least 10 characters long!"}),password:r.z.string().min(8,{message:"Password must be at least 8 characters long!"}).refine(e=>/[A-Z]/.test(e),"Password must contain at least one capital letter!").refine(e=>/[0-9]/.test(e),"Password must contain at least one number!").refine(e=>/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(e),"Password must contain at least one special character!").optional().or(r.z.literal("")),name:r.z.string().min(1,{message:"First name is required!"}),surname:r.z.string().min(1,{message:"Last name is required!"}),email:r.z.string().email({message:"Invalid email address!"}).optional().or(r.z.literal("")),phone:r.z.string().optional(),address:r.z.string(),img:r.z.string().optional(),bloodType:r.z.string().min(1,{message:"Blood Type is required!"}),birthday:r.z.coerce.date({message:"Birthday is required!"}),sex:r.z.enum(["MALE","FEMALE"],{message:"Sex is required!"}),subjects:r.z.array(r.z.string()).optional()}),o=r.z.object({id:r.z.string().optional(),username:r.z.string().min(10,{message:"Username must be at least 10 characters long!"}),password:r.z.string().min(8,{message:"Password must be at least 8 characters long!"}).refine(e=>/[A-Z]/.test(e),"Password must contain at least one capital letter!").refine(e=>/[0-9]/.test(e),"Password must contain at least one number!").refine(e=>/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(e),"Password must contain at least one special character!").optional().or(r.z.literal("")),name:r.z.string().min(1,{message:"First name is required!"}),surname:r.z.string().min(1,{message:"Last name is required!"}),email:r.z.string().email({message:"Invalid email address!"}).optional().or(r.z.literal("")),phone:r.z.string().optional(),address:r.z.string(),img:r.z.string().optional(),bloodType:r.z.string().min(1,{message:"Blood Type is required!"}),birthday:r.z.coerce.date({message:"Birthday is required!"}),sex:r.z.enum(["MALE","FEMALE"],{message:"Sex is required!"}),gradeId:r.z.coerce.number().min(1,{message:"Grade is required!"}),classId:r.z.coerce.number().min(1,{message:"Class is required!"}),parentId:r.z.string().min(1,{message:"Parent Id is required!"})}),m=r.z.object({id:r.z.coerce.number().optional(),title:r.z.string().min(1,{message:"Title name is required!"}),startTime:r.z.coerce.date({message:"Start time is required!"}),endTime:r.z.coerce.date({message:"End time is required!"}),lessonId:r.z.coerce.number({message:"Lesson is required!"})}),d=r.z.object({id:r.z.string().optional(),username:r.z.string().min(10,{message:"Username must be at least 10 characters long!"}),password:r.z.string().min(8,{message:"Password must be at least 8 characters long!"}).refine(e=>/[A-Z]/.test(e),"Password must contain at least one capital letter!").refine(e=>/[0-9]/.test(e),"Password must contain at least one number!").refine(e=>/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(e),"Password must contain at least one special character!").optional().or(r.z.literal("")),name:r.z.string().min(1,{message:"First name is required!"}),surname:r.z.string().min(1,{message:"Last name is required!"}),email:r.z.string().email({message:"Invalid email address!"}).optional().or(r.z.literal("")),phone:r.z.string().min(10,{message:"Phone number must be at least 10 digits long!"}).max(15,{message:"Phone number must be at most 15 digits long!"}),address:r.z.string().min(1,{message:"Address is required!"})}),l=r.z.object({id:r.z.coerce.number().optional(),title:r.z.string().min(1,{message:"Title is required!"}),description:r.z.string().min(1,{message:"Description is required!"}),startTime:r.z.coerce.date({message:"Start time is required!"}),endTime:r.z.coerce.date({message:"End time is required!"}),classId:r.z.coerce.number().optional()}).refine(e=>e.endTime>e.startTime,{message:"End time must be after start time!",path:["endTime"]}),c=r.z.object({id:r.z.coerce.number().optional(),name:r.z.string().min(1,{message:"Lesson name is required!"}),day:r.z.string().optional(),startTime:r.z.coerce.date({message:"Start time is required!"}),endTime:r.z.coerce.date({message:"End time is required!"}),subjectId:r.z.coerce.number().min(1,{message:"Subject ID is required!"}),classId:r.z.coerce.number().min(1,{message:"Class ID is required!"}),teacherId:r.z.string().optional()}).refine(e=>e.endTime>e.startTime,{message:"End time must be after start time!",path:["endTime"]}),u=r.z.object({id:r.z.string().optional(),username:r.z.string().min(1,{message:"Username is required!"}).max(50,{message:"Username must be at most 50 characters long!"}),firstName:r.z.string().min(1,{message:"First name is required!"}),surname:r.z.string().min(1,{message:"Last name is required!"}),password:r.z.string().min(8,{message:"Password must be at least 8 characters long!"}).refine(e=>/[A-Z]/.test(e),"Password must contain at least one capital letter!").refine(e=>/[0-9]/.test(e),"Password must contain at least one number!").refine(e=>/[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(e),"Password must contain at least one special character!").optional().or(r.z.literal(""))}),g=r.z.object({id:r.z.coerce.number().optional(),title:r.z.string().min(1,{message:"Title is required!"}),description:r.z.string().min(1,{message:"Description is required!"}),date:r.z.coerce.date({message:"Date is required!"}),classId:r.z.coerce.number().optional()}),z=r.z.object({id:r.z.coerce.number().optional(),level:r.z.coerce.number().min(1,{message:"Grade level is required!"}).refine(e=>Number.isInteger(e),{message:"Grade level must be an integer!"}),createdAt:r.z.coerce.date().optional(),updatedAt:r.z.coerce.date().optional()}),p=r.z.object({id:r.z.coerce.number().optional(),title:r.z.string().min(1,{message:"Title is required!"}),startDate:r.z.coerce.date({message:"Start date is required!"}),dueDate:r.z.coerce.date({message:"Due date is required!"}),lessonId:r.z.coerce.number().min(1,{message:"Lesson ID is required!"}),createdAt:r.z.coerce.date().optional(),updatedAt:r.z.coerce.date().optional()}).refine(e=>e.dueDate>e.startDate,{message:"Due date must be after start date!",path:["dueDate"]}),b=r.z.object({id:r.z.coerce.number().optional(),score:r.z.coerce.number().min(0,{message:"Score must be a non-negative number!"}),examId:r.z.coerce.number().optional(),assignmentId:r.z.coerce.number().optional(),studentId:r.z.string().min(1,{message:"Student ID is required!"}),createdAt:r.z.coerce.date().optional(),updatedAt:r.z.coerce.date().optional()}),f=r.z.object({id:r.z.coerce.number().optional(),title:r.z.string().min(1,{message:"Post Title required!"}),description:r.z.string().min(1,{message:"Post description required!"}),image:r.z.string().optional(),createdAt:r.z.coerce.date().optional(),updatedAt:r.z.coerce.date().optional()}),x=r.z.object({id:r.z.coerce.number().optional(),title:r.z.string().min(1,{message:"Title required!"}).max(100,{message:"Title must be less than 100 characters!"}),file:r.z.string().optional()})}}]);